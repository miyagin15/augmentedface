using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class wireframe : MonoBehaviour
{
    public GoogleARCore.Examples.AugmentedFaces.ARCoreAugmentedFaceMeshFilter _source;

    private Mesh _face;
    private Mesh _mesh;
    private Vector3[] _vertices;
    public Text text;
    public Text text1;
    public Text text2;
    public Text text3;
    public Text text4;
    public Text text5;
    public Text text6;
    public Text text7;
    public Text text8;

    int mouth = 0;
    int switch_mouth = 1;


    // Start is called before the first frame update
    void Start()
    {
        
        _face = _source.GetComponent<MeshFilter>().mesh;
        _mesh = GetComponent<MeshFilter>().mesh;
        int count = _mesh.triangles.Length;
        _vertices = new Vector3[count];

        _vertices = new Vector3[count];
        var _wireframe_indices = new int[count];
        var _wireframe_uvs = new Vector2[count];
        for (var i = 0; i < count; i += 3)
        {
            _wireframe_indices[i] = i;
            _wireframe_indices[i + 1] = i + 1;
            _wireframe_indices[i + 2] = i + 2;
            _wireframe_uvs[i]   = new Vector2(0f, 0f);
            _wireframe_uvs[i+1] = new Vector2(1f, 0f);
            _wireframe_uvs[i+2] = new Vector2(0f, 1f);
        }
        _mesh.Clear();
        _mesh.vertices = _vertices;
        _mesh.uv = _wireframe_uvs;
        _mesh.triangles = _wireframe_indices;
        _mesh.RecalculateBounds();
        text7.text = "off";

    }

    // Update is called once per frame
    void Update()
    {
        var tri = _face.triangles;
        var vtx = _face.vertices;
        //for (int i = 0; i < tri.Length; i += 3)

        for (int i = 0; i < 160; i += 3)
        {
            int i0 = tri[i];
            int i1 = tri[i + 1];
            int i2 = tri[i + 2];
            _vertices[i] = vtx[i0];
            _vertices[i + 1] = vtx[i1];
            _vertices[i + 2] = vtx[i2];
            //text.text = (_face.triangles[i]).ToString();
        }
        /*        
                vtx[tri[0]][1] = 0.0001f;//(x,y,z?)
                _vertices[0] = vtx[tri[0]];

                vtx[tri[6]][0] = 0.00f;//(x,y,z?)
                _vertices[3] = vtx[tri[3]];


                vtx[tri[27]][2] = 0.01f;//(x,y,z?)
                _vertices[27] = vtx[tri[27]];

                vtx[tri[14]][2] = -0.01f;//(x,y,z?)
                _vertices[14] = vtx[tri[14]];

                vtx[tri[34]][0] = 0.01f;//(x,y,z?)
                _vertices[34] = vtx[tri[34]];
          */

        /*
        for (int i = 30; i < 36; i += 3)
        {
            int i0 = tri[i];
            int i1 = tri[i + 1];
            int i2 = tri[i + 2];
            _vertices[i] = vtx[i0];
            _vertices[i + 1] = vtx[i1];
            _vertices[i + 2] = vtx[i2];
        }
        */


        //var length = vtx[12][0] - vtx[15][0];//0000
        //var length1 = vtx[12][1] - vtx[15][1];//0000
        //var length2 = vtx[12][2] - vtx[15][2];//0000

        /*å˚ÇæÇØ
        vtx[30][0] += 0.1f;
        _vertices[30] = vtx[30];
        var length = vtx[30];

        var length1 = vtx[31];
        var length2 = vtx[32];
        var length3 = vtx[33];
        var length4 = vtx[34];
        var length5 = vtx[35];
       */

        //var length1 = vtx[30][0] - vtx[33][0];//0.0026~8
        //var length1 = vtx[30][0] - vtx[33][0];//0.033~35

        //        var length1 = vtx[31][0] - vtx[34][0];//0.
        //      var length2 = vtx[13][0] - vtx[16][0];//0000

        /*
        text.text = (length).ToString("f4");
        text1.text = (length1).ToString("f4");
        text2.text = (length2).ToString("f4");
        text3.text = (length3).ToString("f4");
        text4.text = (length4).ToString("f4");
        text5.text = (length5).ToString("f4");

        */

        /*
        text.text = (vtx.Length).ToString("f4");
        text1.text = (tri[0]).ToString("f4") +","+ (tri[1]).ToString("f4") + "," + (tri[2]).ToString("f4");
        text2.text = (tri[21]).ToString("f4") + "," + (tri[22]).ToString("f4") + "," + (tri[23]).ToString("f4");
        text3.text = (tri[24]).ToString("f4") + "," + (tri[25]).ToString("f4") + "," + (tri[26]).ToString("f4");
        */

        /*
        text1.text = (tri[18]).ToString("f4") + "," + (tri[19]).ToString("f4") + "," + (tri[20]).ToString("f4");
        text2.text = (tri[21]).ToString("f4") + "," + (tri[22]).ToString("f4") + "," + (tri[23]).ToString("f4");
        text3.text = (tri[24]).ToString("f4") + "," + (tri[25]).ToString("f4") + "," + (tri[26]).ToString("f4");
        */
        /*
       for (int a =0; a < 500; a++)
       {
           text7.text += (tri[a]).ToString("f4") + "," + (tri[a+1]).ToString("f4") + "," + (tri[a+2]).ToString("f4");
       }
       */
        /*
        text4.text = (tri[27]).ToString("f4") + "," + (tri[28]).ToString("f4") + "," + (tri[29]).ToString("f4");
        text5.text = (tri[30]).ToString("f4") + "," + (tri[31]).ToString("f4") + "," + (tri[32]).ToString("f4");
        text6.text = (tri[33]).ToString("f4") + "," + (tri[34]).ToString("f4") + "," + (tri[35]).ToString("f4");
        */
        /*
        int i0 = tri[0];
        int i1 = tri[1];
        int i2 = tri[2];
        _vertices[0] = vtx[i0];
        _vertices[0 + 1] = vtx[i1];
        _vertices[0 + 2] = vtx[i2];
    */


        var length = vtx[69][1] - vtx[36][1];//0.0026~8
        var length1 = vtx[10][1] - vtx[152][1];//äÁëSëÃÇÃÇôÇÃí∑Ç≥

        var length_mouth = vtx[13][1] - vtx[14][1];


        if (length_mouth > 0.005)
        {
            mouth += 1;

            if (mouth > 15)
            {
                text7.text ="on";
                text7.color = new Color(0f / 255f, 155f / 255f, 155f / 255f);
                switch_mouth += 1;
                mouth = 0;
            }
         
        }

        text.text = (length).ToString("f4");
        text1.text = (length / length1).ToString("f4");
        text2.text = (length / length1 - 0.4).ToString("f4");
        //text.text = (_vertices[0]).ToString("f4");
        //text1.text = (_vertices[3]).ToString("f4");
        //text2.text = (_vertices[14]).ToString("f4");


        //text3.text = (_vertices[27]).ToString("f4");
        //text4.text = (_vertices[34]).ToString("f4");
        //text5.text = (_vertices[32]).ToString("f4");
        text5.text = "switch_mouth"+switch_mouth.ToString("f4"); 

        if (switch_mouth %2 == 0)
        {
            text8.fontSize = (int)((length / length1 - 0.4f) * 100f) * 7;
            float real = (float)((length / length1 - 0.4) * 10 * 100);
            text8.color = new Color(5 * real / 255f, 68f / 255f, 205f / 255f);

        }else{
            text7.text = "off";
            text7.color = new Color(0f / 255f, 0f / 255f, 0f / 255f);

            text8.color = new Color(0f / 255f, 0f / 255f, 0f / 255f);

        }
        //text.text = vtx[10].ToString("f4") + vtx[21].ToString("f4");
        //text1.text = vtx[251].ToString("f4") + vtx[152].ToString("f4");
        //text2.text = vtx[5].ToString("f4") + vtx[21].ToString("f4");



        //text6.text = (_vertices[600]).ToString("f4");
        text6.text = mouth.ToString("f4");
        //text7.text = (vtx.Length).ToString("f4");


        var center = _source.AumgnetedFace.CenterPose;
        text4.text = "center:"+center.ToString("f2");

        text3.text = center.ToString("f2");

        //var b = _source.AumgnetedFace.GetVertices(vtx);

        text5.text = "å˚ÇÃäJÇ´ÅF"+length_mouth.ToString();

        _mesh.vertices = _vertices;
        _mesh.RecalculateBounds();
    }
    
}
